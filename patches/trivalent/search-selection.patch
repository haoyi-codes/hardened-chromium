diff --git a/chrome/browser/search_engine_choice/search_engine_choice_dialog_service_factory.cc b/chrome/browser/search_engine_choice/search_engine_choice_dialog_service_factory.cc
index e4d2eacf3f316..0dfdd8c0d365d 100644
--- a/chrome/browser/search_engine_choice/search_engine_choice_dialog_service_factory.cc
+++ b/chrome/browser/search_engine_choice/search_engine_choice_dialog_service_factory.cc
@@ -129,10 +129,6 @@ SearchEngineChoiceDialogServiceFactory::BuildServiceInstanceForBrowserContext(
 
   base::CommandLine* const command_line =
       base::CommandLine::ForCurrentProcess();
-  if (!g_is_chrome_build &&
-      !command_line->HasSwitch(switches::kForceSearchEngineChoiceScreen)) {
-    return nullptr;
-  }
 
   if (command_line->HasSwitch(switches::kNoFirstRun) &&
       !command_line->HasSwitch(
diff --git a/components/regional_capabilities/regional_capabilities_utils.cc b/components/regional_capabilities/regional_capabilities_utils.cc
index cbdceda6674e2..be04a19262c35 100644
--- a/components/regional_capabilities/regional_capabilities_utils.cc
+++ b/components/regional_capabilities/regional_capabilities_utils.cc
@@ -21,9 +21,8 @@ bool IsEeaCountry(int country_id) {
   // the current profile country.
   // TODO(crbug.com/328040066): Move this check to
   // `RegionalCapabilitiesService::IsInEeaCountry()`.
-  return HasSearchEngineCountryListOverride()
-             ? true
-             : kEeaChoiceCountriesIds.contains(country_id);
+  // We want the search choice screen no matter what
+  return true;
 }
 
 std::optional<SearchEngineCountryOverride> GetSearchEngineCountryOverride() {
