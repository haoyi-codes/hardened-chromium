diff --git a/chrome/browser/about_flags.cc b/chrome/browser/about_flags.cc
index 7613006656aaa..ee707f847ccba 100644
--- a/chrome/browser/about_flags.cc
+++ b/chrome/browser/about_flags.cc
@@ -4343,6 +4343,59 @@ const FeatureEntry kFeatureEntries[] = {
 // //tools/flags/generate_unexpire_flags.py.
 #include "build/chromeos_buildflags.h"
 #include "chrome/browser/unexpire_flags_gen.inc"
+    {"middle-click-autoscroll", "Autoscroll with Middleclick",
+     "Enables scroll with middleclick. Disabled by default. This feature "
+     "is exposed by Trivalent.", kOsLinux,
+     FEATURE_VALUE_TYPE(blink::features::kMiddleClickAutoscroll)},
+    {"middle-click-copy-paste", "Copy and Paste with Middle Click",
+     "Controls copying and pasting with middle click. NOTE: Enabling "
+     "Autoscroll with Middleclick will force-disable this feature. "
+     "Enabled by default. This feature is provided by Trivalent.", 
+     kOsLinux,
+     FEATURE_VALUE_TYPE(views::features::kMiddleClickCopyPaste)},
+    {"show-punycode-domains", "Show punycode for IDN domains",
+     "Shows punycode for IDN domains to mitigate IDN homograph attacks. "
+     "Disabled by default. This feature is provided by Trivalent.",
+     kOsAll, FEATURE_VALUE_TYPE(url::kShowPunycodeDomains)},
+    {"pdf-javascript", "PDF JavaScript",
+     "Toggle JavaScript for rendered PDFs (this also controls XFA Forms). "
+     "Disabled by default. This feature is provided by Trivalent.",
+     kOsAll, FEATURE_VALUE_TYPE(chrome_pdf::features::kPdfJavaScript)},
+    {"clear-cross-origin-referrers", "Clear cross-origin referrers",
+     "Clears referrers when navigating across origins. Disabled by default. "
+     "This feature is provided by Trivalent.", kOsAll,
+     FEATURE_VALUE_TYPE(net::features::kDisableCrossOriginReferrers)},
+    {"cross-origin-trim-referrer", "Cross-origin referrer trimming",
+     "Trims the referrer to just the origin on cross origin navigation. "
+     "Enabled by default. This feature is exposed by Trivalent.",
+     kOsAll,
+     FEATURE_VALUE_TYPE(net::features::kCapReferrerToOriginOnCrossOrigin)},
+    {"gtk-version-4", "GTK Version 4",
+     "Enables Trivalent to use GTK 4 instead of GTK 3, useful for IME. "
+     "This flag is exposed by Trivalent.", kOsAll,
+     SINGLE_VALUE_TYPE_AND_VALUE("gtk-version", "4")},
+    {"strict-popup-blocking", "Strict Popup Blocking",
+     "Controls the strictness of the popup blocker. This switch is provided "
+     "by Trivalent.", kOsAll,
+     SINGLE_DISABLE_VALUE_TYPE("disable-strict-popup-blocking")},
+    {"hide-profile-icon", "Hide profile icon in toolbar",
+     "Hides the profile icon in the toolbar in regular profiles. Enabled "
+     "by default. This feature is provided by Trivalent." , kOsAll,
+     FEATURE_VALUE_TYPE(features::kHideProfileIcon)},
+    {"gssapi-support", "GSSAPI Authentication",
+     "Enables GSSAPI for authentication. WARNING! This can cause the "
+     "network service sandbox to become persistently disabled, enable only "
+     "if absolutely necessary. This switch is provided by Trivalent.",
+     kOsLinux, SINGLE_VALUE_TYPE("enable-gssapi")},
+    {"gpu-sandbox-test", "Force GPU Sandbox For Testing",
+     "Enables the GPU sandbox. WARNING: This is HIGHLY experimental and "
+     "can disable hardware acceleration or cause crashes. It is for "
+     "testing only. To assist in testing, enable this flag, shutdown  "
+     "the browser, run the browser via commandline and paste the error "
+     "output in an issue that will be present here: "
+     "https://github.com/secureblue/trivalent. This flag is exposed by "
+     "Trivalent.", kOsLinux,
+     SINGLE_VALUE_TYPE(switches::kGpuSandboxStartEarly)},
     {variations::switches::kEnableBenchmarking,
      flag_descriptions::kEnableBenchmarkingName,
      flag_descriptions::kEnableBenchmarkingDescription, kOsAll,
